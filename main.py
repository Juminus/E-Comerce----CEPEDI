# -*- coding: utf-8 -*-
"""Projeto Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lr-XnOLH80FJw-B4AJm6O-W7w7MA-Xxg
"""

from typing import List, Dict
from time import sleep
import json
from modulos.classes import *
import os



clientes: List[Cliente] = []
funcionarios: List[Funcionario] = []
produtos: List[Produto] = []
carrinho: List[Dict[Produto, int]] = []


def main() -> None:
    inicio()


def inicio() -> None:
    os.system('cls') or None
    print('===================================')
    print('=========== Bem-vindo(a) ==========')
    print('===================================')
    print('Selecione uma opção abaixo: ')
    print('1 - Sou Cliente')
    print('2 - Sou Funcionario')
    print('3 - Carregar de arquivo JSON')
    print('4 - Sair do Programa')

    opcao: int = int(input())

    if opcao == 1:
        login()

    elif opcao == 2:
        funcionario()
    elif opcao == 3:
        global clientes, funcionarios, produtos
        clientes = carrega_json("clientes.json", "Cliente")
        funcionarios = carrega_json("funcionarios.json", "Funcionario")
        produtos = carrega_json("produtos.json", "Produto")
        print('Dados Carregados!')
        sleep(1)
        os.system('cls') or None
        inicio()

    elif opcao == 4:
        print("Encerrando...")
        exit(0)
    else:
        print('Opção inválida!')
        sleep(1)
        os.system('cls') or None
        inicio()


def login() -> None:
    os.system('cls') or None
    print('===========================================')
    print('================LOGIN======================')
    print('===========================================')
    print('Cadastre-se e obtenha descontos exclusivos: ')
    print('1 - Cadastrar Usuario')
    print('2 - Logar como Usuario')
    print('3 - Sair do Programa')

    opcao: int = int(input())
    if opcao == 1:
        cadastrar_cliente()
    elif opcao == 2:
        login_cliente()
    elif opcao == 3:
        print("Até mais")
        exit(0)
    else:
        print('Opção inválida!')
        sleep(1)
        inicio()


def cadastrar_cliente() -> None:
    os.system('cls') or None
    print('Cadastro de Cliente')
    print('===================')
    nome: str = input('Informe seu nome: ')
    aniv: str = input('Informe sua data de aniversario: ')
    email: str = input('Informe um email: ')
    senha: str = input('Informe uma senha: ')
    
    cliente: Cliente = Cliente(nome, aniv, senha, email)

    clientes.append(cliente)
    salva_json("clientes.json", clientes)

    print(f'O cliente {cliente.nome} foi cadastrado com sucesso!')
    sleep(2)
    login_cliente()


def login_cliente() -> None:
    os.system('cls') or None
    print('===========================================')
    print('================LOGIN======================')
    print('===========================================')
    nome: str = input('Informe seu nome de usuario: ')
    senha: str = input('Informe sua senha: ')

    if __verifica_cliente(nome, senha):
        os.system('cls') or None
        menu()


def __verifica_cliente(nome, senha) -> int:
    for cliente in clientes:
        if cliente.nome == nome and cliente.senha == senha:
            return 1
    print('Usuario ou senha incorreta')
    login_cliente()


def menu() -> None:
    print('===================================')
    print('======== Python E-Commerce ========')
    print('===================================')

    print('Selecione uma opção abaixo: ')
    print('1 - Listar produtos')
    print('2 - Comprar produto')
    print('3 - Visualizar carrinho')
    print('4 - Fechar pedido')
    print('5 - Sair do sistema')

    opcao: int = int(input())

    if opcao == 1:
        listar_produto()
    elif opcao == 2:
        comprar_produto()
    elif opcao == 3:
        visualizar_carrinho()
    elif opcao == 4:
        fechar_pedido()
    elif opcao == 5:
        print('Volte sempre!')
        sleep(2)
        inicio()
    else:
        print('Opção inválida!')
        sleep(1)
        os.system('cls') or None
        menu()


def funcionario() -> None:
    os.system('cls') or None
    print('===========================================')
    print('============MENU FUNCIONÁRIO===============')
    print('===========================================')
    print('1 - Cadastrar Funcionario')
    print('2 - Logar')
    print('3 - Sair do Programa')

    opcao: int = int(input())
    if opcao == 1:
        cadastrar_funcionario()
    elif opcao == 2:
        login_funcionario()
    elif opcao == 3:
        print("Até mais")
        exit(0)
    else:
        print('Opção inválida!')
        sleep(1)
        inicio()

def cadastrar_funcionario() -> None:
        os.system('cls') or None
        senhaAdm = input("insira a senha de adm: ")
        if senhaAdm == "1414": 
            os.system('cls') or None
            print('Cadastro de Funcionario')
            print('===================')
            nome: str = input('Informe seu nome: ')
            aniv: str = input('Informe sua data de aniversario: ')
            cargo: str = input('Informe o cargo: ')
            senha: str = input('Informe uma senha: ')
            funcionario: Funcionario = Funcionario(nome, aniv, senha, cargo)

            funcionarios.append(funcionario)
            salva_json("funcionarios.json", funcionarios)

            print(f'O funcionario {funcionario.nome} foi cadastrado com sucesso!')
            sleep(2)
            login_funcionario()
        else: 
            print(f'Senha incorreta, tente novamente!')
            menu()
        
def login_funcionario() -> None:
    os.system('cls') or None
    print('===========================================')
    print('================LOGIN======================')
    print('===========================================')
    nome: str = input('Informe seu nome de usuario: ')
    senha: str = input('Informe sua senha: ')

    if __verifica_senha(nome, senha):
        menu_funcionario()

def __verifica_senha(nome, senha) -> int:
    if len(funcionarios) > 0:
        for funcionario in funcionarios:
            if funcionario.nome == nome and funcionario.senha == senha:
                return 1
        print('Usuario ou senha incorreta')
        
        print('Se deseja sair digite 1, Se deseja tentar novamente digite 2')
        opcao: int = int(input())
        if opcao == 1:
            inicio()
        elif opcao == 2:
            login_funcionario()
        else:
            print('Opcao invalida')
            funcionario()
    else:
        print('Não existe usuarios cadastrados.')
        
        
def menu_funcionario() -> None:
    os.system('cls') or None
    print('===================================')
    print('======== Python E-Commerce ========')
    print('===================================')
    print('Selecione uma opção abaixo: ')
    print('1 - Cadastrar produtos')
    print('2 - Remover produtos')
    print('3 - Alterar quantidade em estoque')
    print('4 - Sair do sistema')

    opcao: int = int(input())

    if opcao == 1:
        cadastrar_produto()
    elif opcao == 2:
        remover_produto()
    elif opcao == 3:
        alterar_produto()
    elif opcao == 4:
        print('Logoff')
        sleep(1)
        inicio()
    else:
        print('Opção inválida!')
        sleep(1)
        menu_funcionario()


def cadastrar_produto() -> None:
    os.system('cls') or None
    print('Cadastro de Produto')
    print('===================')

    nome: str = input('Informe o nome do produto: ')
    preco: float = float(input('Informe o preço do produto: '))
    estoque: int = int(input('Informe a quantidade de produtos em estoque: '))

    produto: Produto = Produto(nome, preco, estoque)

    produtos.append(produto)
    salva_json("produtos.json", produtos)

    print(f'O produto {produto.nome} foi cadastrado com sucesso!')
    sleep(2)
    menu_funcionario()


def remover_produto() -> None:
    os.system('cls') or None
    if len(produtos) > 0:
        print('Listagem de produtos')
        print('--------------------')
        for produto in produtos:
            print(produto)
            print('----------------')
        codigo: int = int(input('Informe o codigo do produto que deseja retirar do sistema: '))
        try:
            for produto in produtos:
                if produto.codigo == codigo:
                    produtos.remove(produto)
                    salva_json("produtos.json", produtos)
            print('Produto deletado com sucesso')
        except:
            print('Produto não cadastrado')
            menu_funcionario()
    else:
        print('Ainda não existem produtos cadastrados.')
    menu_funcionario()


def alterar_produto() -> None:
    os.system('cls') or None
    if len(produtos) > 0:
        print('Listagem de produtos')
        print('--------------------')
        for produto in produtos:
            print(produto)
            print('----------------')

        try:
            codigo: int = int(input('Informe o codigo do produto que deseja alterar do sistema: '))

            produto: Produto = pega_produto_por_codigo(codigo)

            value: int = int(input(f'Informe a nova quantidade do produto {produto.nome} em estoque: '))

            produto.estoqueSet(value)
            salva_json("produtos.json", produtos)

            print('Novo valor adicionado')

        except:
            print("Erro, tente novamente")

            menu_funcionario()

    else:
        print('Ainda não existem produtos cadastrados.')

    menu_funcionario()


def listar_produto() -> None:
    os.system('cls') or None
    if len(produtos) > 0:
        print('Listagem de produtos')
        print('--------------------')
        for produto in produtos:
            print(produto)
            print(f'Estoque: {produto.estoque}')
            print('----------------')
            sleep(1)
    else:
        print('Ainda não existem produtos cadastrados.')
    sleep(2)
    menu()


def comprar_produto() -> None:
    os.system('cls') or None
    if len(produtos) > 0:
        print('--------------------------------------------------------------')
        print('================== Produtos Disponíveis ======================')
        for produto in produtos:
            print(produto)
            print(f'Estoque: {produto.estoque}')
            print('---------------------------------------------------------')
            sleep(1)
        codigo: int = int(input('Informe o código do produto que deseja adicionar ao carrinho:'))

        produto: Produto = pega_produto_por_codigo(codigo)

        if produto.estoque:
            if len(carrinho) > 0:
                tem_no_carrinho: bool = False
                for item in carrinho:
                    quant: int = item.get(produto)
                    if quant:
                        item[produto] = quant + 1
                        print(f'O produto {produto.nome} agora possui {quant + 1} unidades no carrinho.')
                        produto.diminui_estoque()
                        tem_no_carrinho = True
                        sleep(2)
                        os.system('cls') or None
                        menu()
                if not tem_no_carrinho:
                    prod = {produto: 1}
                    carrinho.append(prod)
                    print(f'O produto {produto.nome} foi adicionado ao carrinho.')
                    produto.diminui_estoque()
                    sleep(2)
                    os.system('cls') or None
                    menu()
            else:
                item = {produto: 1}
                carrinho.append(item)
                print(f'O produto {produto.nome} foi adicionado ao carrinho.')
                produto.diminui_estoque()
                sleep(2)
                os.system('cls') or None
                menu()
        else:
            print(f'O produto com código {codigo} não foi encontrado ou não tem estoque.')
            sleep(2)
            os.system('cls') or None
            menu()
    else:
        print('Ainda não existem produtos para vender.')
    sleep(2)
    os.system('cls') or None
    menu()


def visualizar_carrinho() -> None:
    os.system('cls') or None
    if len(carrinho) > 0:
        print('Produtos no carrinho: ')

        for item in carrinho:
            for dados in item.items():
                print(dados[0])
                print(f'Quantidade: {dados[1]}')
                print('-----------------------')
                sleep(1)
    else:
        print('Ainda não existem produtos no carrinho.')
    sleep(2)
    os.system('cls') or None
    menu()


def fechar_pedido() -> None:
    os.system('cls') or None
    if len(carrinho) > 0:
        valor_total: float = 0

        print('Produtos do Carrinho')
        for item in carrinho:
            for dados in item.items():
                print(dados[0])
                print(f'Quantidade: {dados[1]}')
                valor_total += dados[0].preco * dados[1]
                print('------------------------')
                sleep(1)
        print(f'Sua fatura é {formata_float_str_moeda(valor_total)}')
        print('Volte sempre!')
        carrinho.clear()
        sleep(5)
    else:
        print('Ainda não existem produtos no carrinho.')
    sleep(2)
    os.system('cls') or None
    menu()





def pega_produto_por_codigo(codigo: int) -> Produto:
    p: Produto = None

    for produto in produtos:
        if produto.codigo == codigo:
            p = produto
    return p


def salva_json(nome_arquivo: str, lista):
    str_json = '{"dados": ['
    n = 1
    for dados in lista:
        dados = json.dumps(dados.__dict__)
        if n > 1:
            str_json += ','
        str_json += dados
        n += 1
    str_json += "]}"
    with open(nome_arquivo, 'w') as file:
        json.dump(str_json, file, indent=4, separators=(',',':'))


def carrega_json(nome_arquivo: str, tipo: str):
    try:
        with open(nome_arquivo) as file:
            dados = json.load(file)
            dados = json.loads(dados)
            dados = dados['dados']
        if tipo == "Cliente":
            lista: List[Cliente] = []
            for cliente in dados:
                lista.append(Cliente(cliente['_Pessoa__nome'],cliente['_Pessoa__aniv'],cliente['_Pessoa__senha'],cliente['_Cliente__email']))
        elif tipo == "Funcionario":
            lista: List[Funcionario] = []
            for funcionario in dados:
                lista.append(Funcionario(funcionario['_Pessoa__nome'],funcionario['_Pessoa__aniv'],funcionario['_Pessoa__senha'],funcionario['_Funcionario__cargo']))
        elif tipo == "Produto":
            lista: List[Produto] = []
            for produto in dados:
                lista.append(Produto(produto['_Produto__nome'],produto['_Produto__preco'],produto['_Produto__estoque']))
        return lista
    except:
        return []

if __name__ == '__main__':
    main()